#!/usr/bin/env python3
from argparse import ArgumentParser

from siebenapp.system import load
from siebenapp.domain import Select


def fmt(goal_id, goal_vars):
    name = goal_vars["name"]
    op = " " if goal_vars["open"] else "x"
    status = f"[{op}]" if goal_vars["switchable"] else f" {op} "
    selection = " "
    if goal_vars["select"] == "select":
        selection = ">"
    elif goal_vars["select"] == "prev":
        selection = "_"
    children = ""
    if goal_vars["edge"]:
        child_list = ",".join(str(e[0]) for e in goal_vars["edge"])
        children = f" [{child_list}]"
    return f"{goal_id}{status}{selection}{name}{children}"


def build_actions(command):
    if command and all(c in '1234567890' for c in command):
        return [Select(int(c)) for c in command]
    return []


def loop(goals):
    cmd = ''
    while cmd != 'q':
        x = goals.q('name,edge,open,select,switchable')
        for goal_id, goal_vars in x.items():
            print(fmt(goal_id, goal_vars))
        try:
            cmd = input('> ').strip()
        except EOFError:
            break
        actions = build_actions(cmd)
        if actions:
            goals.accept_all(*actions)


def main():
    parser = ArgumentParser()
    parser.add_argument(
        "db", help="Path to the database file",
    )
    args = parser.parse_args()
    goals = load(args.db)
    loop(goals)


if __name__ == "__main__":
    main()
